<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>List</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <style>
      body {
        background-image: url("https://mdbootstrap.com/img/Photos/Others/images/79.jpg");
        background-size: cover;
        background-repeat: no-repeat;
        display: flex;
        height: 100vh;
        margin: 0;
      }

      .search-container {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        margin-bottom: 40px;
      }

      .search-box {
        border-radius: 5px;
        width: 200px;
        height: 30px;
        padding-left: 10px;
        margin-right: 10px;
      }

      .search-button {
        background-color: white;
        font-weight: bold;
        color: black;
        border: none;
        border-radius: 5px;
        padding: 5px 10px;
        margin-right: 10px;
        cursor: pointer;
      }

      .product-container {
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        padding: 20px;
        height: 100%;
      }
    </style>
  </head>

  <body>
    <%- include('../Screen/Navbar.ejs') -%>
    <div class="container mt-5 pt-5 product-container">
      <h2 class="pagination justify-content-center mb-5">Danh sách sản phẩm</h2>

      <table class="table table-hover" style="text-align: center">
        <thead class="table-success">
          <tr>
            <th>ID PRODUCT</th>
            <th>Type</th>
            <th>Name</th>
            <th>Price</th>
            <th>Image</th>
            <th>Edit</th>
            <th>Delete</th>
          </tr>
        </thead>
        <tbody id="productTableBody"></tbody>
      </table>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", async () => {
        try {
          const response = await fetch("/api/products", {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
          }

          const data = await response.json();

          populateTable(data);
        } catch (error) {
          console.error("Error fetching data:", error);
        }

        function populateTable(data) {
          const tableBody = document.getElementById("productTableBody");

          data.forEach((product) => {
            const row = document.createElement("tr");
            let avatarHTML = "";

            if (Array.isArray(product.image)) {
              // Nếu avatar là một mảng (nhiều ảnh)
              product.image.forEach((image) => {
                avatarHTML += `<img src="${image}" style="max-width: 100px; max-height: 100px; border-radius: 10px;">`;
              });
            } else {
              // Nếu avatar là một chuỗi (một ảnh)
              avatarHTML = `<img src="${product.image}" style="max-width: 100px; max-height: 100px; border-radius: 10px;">`;
            }

            row.innerHTML = `
      <td>${product._id}</td>  
      <td>${product.idType}</td>
      <td>${product.name}</td>
      <td>${product.price}</td>
      <td>${avatarHTML}</td>
      <td><i class="fas fa-edit" data-bs-toggle="modal" data-bs-target="#editModal" onclick="editProduct('${product._id}', '${product.image}', '${product.name}', '${product.price}', '${product.idType}')"></i></td>
<td onclick="deleteProduct('${product._id}')"><i class="fas fa-trash-alt"></i></td>
    `;

            tableBody.appendChild(row);
          });
        }
      });
      function editProduct(
        productId,
        productAvatar,
        productName,
        productPrice,
        idType
      ) {
        const editModal = document.getElementById("editModal");

        const editIdInput = document.getElementById("editId");
        const editNameInput = document.getElementById("editName");
        const editPriceInput = document.getElementById("editPrice");
        const editImageInput = document.getElementById("editImage");
        const editIdTypeInput = document.getElementById("editIdType");

        editIdInput.value = productId;
        editNameInput.value = productName;
        editPriceInput.value = productPrice;
        editImageInput.src = productAvatar;
        editIdTypeInput.value = idType;

        const modalInstance = new bootstrap.Modal(editModal);
        modalInstance.show();
      }

      function saveChanges() {
        const editIdInput = document.getElementById("editId").value;
        const editNameInput = document.getElementById("editName").value;
        const editPriceInput = document.getElementById("editPrice").value;
        const editImageInput = document.getElementById("editImage").value;
        const editIdTypeInput = document.getElementById("editIdType").value;

        var form = document.getElementById("editProductForm");
        var formData = new FormData(form);

        formData.append("id", editIdInput);
        formData.append("name", editNameInput);
        formData.append("price", editPriceInput);
        formData.append("idType", editIdTypeInput);
        formData.append("image", editImageInput);

        fetch(`/update/product/${editIdInput}`, {
          method: "PUT",
          body: formData,
        })
          .then((response) => {
            console.log(response);
            if (response.status === 200) {
              alert("Update successfully!");
              const modalInstance = bootstrap.Modal.getInstance(
                document.getElementById("editModal")
              );
              window.location.href = "/list";
            } else {
              alert("Update failed!");
            }
          })
          .catch((err) => {
            console.error("Error updating product:", err);
          });
      }
      function deleteProduct(productId) {
        if (confirm("Are you sure you want to delete this product?")) {
          fetch(`/delete/product/${productId}`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((response) => {
              if (response.ok) {
                alert("Product deleted successfully!");
                // Reload the page or update the product list
                window.location.reload();
              } else {
                alert("Error deleting product. Please try again.");
              }
            })
            .catch((error) => {
              console.error("Error deleting product:", error);
            });
        }
      }
    </script>

    <!-- Edit Modal -->
    <form id="editProductForm">
      <div
        class="modal fade"
        id="editModal"
        tabindex="-1"
        aria-labelledby="editModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="editModalLabel">Edit Product</h5>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label for="editId" class="form-label">Id:</label>
                <input type="text" class="form-control" id="editId" readonly />
              </div>
              <div class="mb-3">
                <label for="editIdType" class="form-label">Type:</label>
                <input
                  type="text"
                  class="form-control"
                  id="editIdType"
                  readonly
                />
              </div>
              <div class="mb-3">
                <label for="editName" class="form-label">Name:</label>
                <input
                  type="text"
                  class="form-control"
                  id="editName"
                  required
                />
              </div>

              <div class="mb-3">
                <label for="editPrice" class="form-label">Price:</label>
                <input
                  type="number"
                  class="form-control"
                  id="editPrice"
                  required
                />
              </div>

              <div class="mb-3">
                <label for="editImage" class="form-label">Image:</label>
                <input
                  type="file"
                  class="form-control"
                  id="editImage"
                  name="editImage"
                  required
                  multiple
                />
              </div>
              <button
                id="saveChangesButton"
                type="button"
                class="btn btn-primary"
                onclick="saveChanges()"
              >
                Save changes
              </button>
            </div>
          </div>
        </div>
      </div>
    </form>
  </body>
</html>
